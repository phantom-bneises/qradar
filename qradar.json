{
    "appid": "6cf34589-6947-409f-b776-e8fa62e01509",
    "name": "QRadar",
    "description": "This app supports investigative and ingestion actions on an IBM QRadar device",
    "type": "siem",
    "publisher": "Splunk",
    "main_module": "qradar_connector.pyc",
    "app_version": "1.2.59",
    "utctime_updated": "2019-05-15T23:04:45.000000Z",
    "package_name": "phantom_qradar",
    "product_vendor": "IBM",
    "product_name": "QRadar",
    "product_version_regex": ".*",
    "min_phantom_version": "4.0.1068",
    "logo": "logo_ibmqradar.svg",
    "logo_dark": "logo_ibmqradar_dark.svg",
    "license": "Copyright (c) 2016-2019 Splunk Inc.",
    "app_config_render": "default",
    "configuration": {
        "device": {
            "data_type": "string",
            "order": 0,
            "description": "Server IP/Hostname",
            "required": true
        },
        "containers_only": {
            "data_type": "boolean",
            "order": 19,
            "description": "containers only",
            "required": false
        },
        "verify_server_cert": {
            "data_type": "boolean",
            "description": "Verify server certificate",
            "required": true,
            "order": 1,
            "default": false
        },
        "username": {
            "data_type": "string",
            "order": 2,
            "description": "Username",
            "required": false
        },
        "password": {
            "data_type": "password",
            "order": 3,
            "description": "Password",
            "required": false
        },
        "authorization_token": {
            "data_type": "password",
            "order": 4,
            "description": "Auth Token for QRadar REST API calls",
            "required": false
        },
        "timezone": {
            "data_type": "timezone",
            "order": 5,
            "description": "Timezone",
            "required": true
        },
        "add_to_resolved": {
            "data_type": "boolean",
            "order": 6,
            "description": "Ingest artifacts into closed/resolved containers?",
            "verbose": "Ingest artifacts into closed/resolved containers?",
            "required": false,
            "default": false
        },
        "artifact_max": {
            "data_type": "numeric",
            "order": 7,
            "description": "artifact_max",
            "verbose": "Maximum number of artifacts to ingest on poll",
            "required": false,
            "default": "1000"
        },
        "ingest_resolved": {
            "data_type": "boolean",
            "order": 8,
            "description": "Ingest only open"
        },
        "cef_event_map": {
            "data_type": "string",
            "order": 9,
            "description": "cef_event_map",
            "verbose": "JSON formatted string of key value pairs for CEF mapping - use double quotes. CEF values are the keys, Qradar fields are the values",
            "required": false
        },
        "cef_value_map": {
            "data_type": "string",
            "order": 10,
            "description": "cef_value_map",
            "verbose": "JSON formatted string representation of a dictionary used to map cef field values to new values. Similiar to cef_event_map. Replace the value of any cef field with another value. For example, to replace the value of cef.requestURL of \"nourl\", with null value, provide { \"nourl\": null }",
            "default": "",
            "required": false
        },
        "delete_empty_cef_fields": {
            "data_type": "boolean",
            "order": 11,
            "description": "delete_empty_cef_fields",
            "verbose": "Set true to delete cef fields with empty values",
            "default": false,
            "required": false
        },
        "event_fields_for_query": {
            "data_type": "string",
            "order": 12,
            "description": "event_fields_for_query",
            "verbose": "Optionally define a new comma separated list of fields for querying. Comma separated list of field names. Use double quotes if field names contain spaces",
            "required": false
        },
        "add_offense_id_to_name": {
            "data_type": "boolean",
            "order": 13,
            "description": "add_offense_id_to_name",
            "verbose": "Optionally add the offense id to the container name",
            "required": false
        },
        "alternative_ariel_query": {
            "data_type": "boolean",
            "default": false,
            "required": false,
            "order": 14,
            "description": "alternative_ariel_query",
            "verbose": "Alternative ariel query; ignore date specifications and retrieve events from the last [interval_days] (default=5) days; affects on_poll, offense_details and get_events actions; on_poll will auto-extend the number of days to start on/before the day of the offense being retrieved"
        },
        "alternative_ingest_algorithm": {
            "data_type": "boolean",
            "default": false,
            "required": false,
            "order": 15,
            "description": "alternative_ingest_algorithm",
            "verbose": "Alternative ingest algorithm; The following alt_* parameters only apply when this is set to True"
        },
        "alt_time_field": {
            "data_type": "string",
            "default": "start_time",
            "required": false,
            "order": 16,
            "value_list": [
                "start_time",
                "last_updated_time",
                "either"
            ],
            "description": "alt_time_field",
            "verbose": "Ingest offenses if <b>time_field</b> is within the ingestion time range. You can specify checking the offense's start_time, last_updated_time or if either are within the time range. If set to either, the ingestion list will be sorted by last_updated_time and <b>last saved ingestion time</b> will be set to the <b>last_updated_time</b> of the last ingested offense"
        },
        "alt_initial_ingest_time": {
            "data_type": "string",
            "default": "yesterday",
            "required": false,
            "order": 17,
            "description": "alt_initial_ingest_time",
            "verbose": "Set the <b>last saved ingestion time</b> to this. This is the initial lower limit to ingest offenses. This field should be a python parsaable datetime <b>(dateutil module)</b>, nothing exotic, please"
        },
        "alt_ingestion_order": {
            "data_type": "string",
            "default": "oldest first",
            "required": false,
            "order": 18,
            "value_list": [
                "oldest first",
                "latest first"
            ],
            "description": "alt_ingestion_order",
            "verbose": "Ingest from the bottom up or the top down. If <b>oldest first</b>, ingest oldest offenses first. The last saved ingestion time is set to the time of the last offense ingested. If <b>latest first</b>, ingest the newest offenses first. The last saved ingestion time is set to the first offense (latest/newest) ingested"
        }
    },
    "app_config": {
        "interval_days": {
            "data_type": "numeric",
            "order": 0,
            "description": "Interval (days) used during 'Poll Now'",
            "value": "5",
            "required": false
        }
    },
    "actions": [
        {
            "action": "test connectivity",
            "description": "Validate the asset configuration for connectivity. This action runs a quick query on the device to check the connection and credentials",
            "type": "test",
            "identifier": "test_asset_connectivity",
            "read_only": true,
            "parameters": {},
            "output": [],
            "versions": "EQ(*)"
        },
        {
            "action": "list offenses",
            "description": "Get a list of offenses",
            "type": "investigate",
            "identifier": "list_offenses",
            "read_only": true,
            "parameters": {
                "start_time": {
                    "data_type": "numeric",
                    "order": 0,
                    "description": "Start of time range, in epoch time (milliseconds)",
                    "verbose": "If not specified, the default is past 10 days"
                },
                "end_time": {
                    "data_type": "numeric",
                    "order": 1,
                    "description": "End of time range, in epoch time (milliseconds)",
                    "verbose": "If not specified, the default is now"
                },
                "count": {
                    "data_type": "numeric",
                    "order": 2,
                    "description": "Number of offenses to retrieve",
                    "verbose": "If not specified, the default is 100",
                    "default": 100
                },
                "offense_id": {
                    "data_type": "string",
                    "order": 3,
                    "description": "Id of offenses to restrict to",
                    "contains": [
                        "qradar offense id"
                    ],
                    "primary": true,
                    "allow_list": true
                }
            },
            "render": {
                "type": "table",
                "width": 12,
                "height": 5,
                "title": "Offenses List"
            },
            "output": [
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success"
                    ]
                },
                {
                    "data_path": "action_result.parameter.count",
                    "data_type": "numeric",
                    "example_values": [
                        100
                    ]
                },
                {
                    "data_path": "action_result.parameter.end_time",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.parameter.offense_id",
                    "data_type": "numeric",
                    "contains": [
                        "qradar offense id"
                    ],
                    "example_values": [
                        "44"
                    ]
                },
                {
                    "data_path": "action_result.parameter.start_time",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.categories",
                    "data_type": "string",
                    "example_values": [
                        "License Status"
                    ]
                },
                {
                    "data_path": "action_result.data.*.category_count",
                    "data_type": "numeric",
                    "example_values": [
                        10
                    ]
                },
                {
                    "data_path": "action_result.data.*.close_time",
                    "data_type": "numeric",
                    "column_name": "Close Time",
                    "column_order": 9,
                    "example_values": []
                },
                {
                    "data_path": "action_result.data.*.closing_reason_id",
                    "data_type": "numeric",
                    "column_name": "Closing Reason Id",
                    "column_order": 11,
                    "example_values": []
                },
                {
                    "data_path": "action_result.data.*.closing_user",
                    "data_type": "string",
                    "column_name": "Closing User",
                    "column_order": 10,
                    "example_values": []
                },
                {
                    "data_path": "action_result.data.*.credibility",
                    "data_type": "numeric",
                    "example_values": [
                        4
                    ]
                },
                {
                    "data_path": "action_result.data.*.description",
                    "data_type": "string",
                    "column_name": "Description",
                    "column_order": 4,
                    "example_values": [
                        "Local Malware Events\n"
                    ]
                },
                {
                    "data_path": "action_result.data.*.destination_networks",
                    "data_type": "string",
                    "example_values": [
                        "other"
                    ]
                },
                {
                    "data_path": "action_result.data.*.device_count",
                    "data_type": "numeric",
                    "example_values": [
                        3
                    ]
                },
                {
                    "data_path": "action_result.data.*.event_count",
                    "data_type": "numeric",
                    "column_name": "Event Count",
                    "column_order": 6,
                    "example_values": [
                        28603163
                    ]
                },
                {
                    "data_path": "action_result.data.*.flow_count",
                    "data_type": "numeric",
                    "column_name": "Flow Count",
                    "column_order": 7,
                    "example_values": [
                        0
                    ]
                },
                {
                    "data_path": "action_result.data.*.follow_up",
                    "data_type": "boolean",
                    "column_name": "Follow Up",
                    "column_order": 14,
                    "example_values": [
                        false,
                        true
                    ]
                },
                {
                    "data_path": "action_result.data.*.id",
                    "data_type": "numeric",
                    "contains": [
                        "qradar offense id"
                    ],
                    "column_name": "Offense Id",
                    "column_order": 0,
                    "example_values": [
                        44
                    ]
                },
                {
                    "data_path": "action_result.data.*.inactive",
                    "data_type": "boolean",
                    "column_name": "Inactive",
                    "column_order": 5,
                    "example_values": [
                        false,
                        true
                    ]
                },
                {
                    "data_path": "action_result.data.*.last_updated_time",
                    "data_type": "numeric",
                    "column_name": "Last Updated Time",
                    "column_order": 13,
                    "example_values": [
                        1559194600958
                    ]
                },
                {
                    "data_path": "action_result.data.*.local_destination_count",
                    "data_type": "numeric",
                    "example_values": [
                        0
                    ]
                },
                {
                    "data_path": "action_result.data.*.magnitude",
                    "data_type": "numeric",
                    "column_name": "Magnitude",
                    "column_order": 15,
                    "example_values": [
                        5
                    ]
                },
                {
                    "data_path": "action_result.data.*.offense_source",
                    "data_type": "string",
                    "column_name": "Offense Source",
                    "contains": [
                        "ip"
                    ],
                    "column_order": 1,
                    "example_values": [
                        "10.1.16.50"
                    ]
                },
                {
                    "data_path": "action_result.data.*.offense_type",
                    "data_type": "numeric",
                    "example_values": [
                        0
                    ]
                },
                {
                    "data_path": "action_result.data.*.policy_category_count",
                    "data_type": "numeric",
                    "example_values": [
                        0
                    ]
                },
                {
                    "data_path": "action_result.data.*.protected",
                    "data_type": "boolean",
                    "example_values": [
                        false,
                        true
                    ]
                },
                {
                    "data_path": "action_result.data.*.relevance",
                    "data_type": "numeric",
                    "example_values": [
                        4
                    ]
                },
                {
                    "data_path": "action_result.data.*.remote_destination_count",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "action_result.data.*.security_category_count",
                    "data_type": "numeric",
                    "example_values": [
                        10
                    ]
                },
                {
                    "data_path": "action_result.data.*.severity",
                    "data_type": "numeric",
                    "column_name": "Severity",
                    "column_order": 12,
                    "example_values": [
                        6
                    ]
                },
                {
                    "data_path": "action_result.data.*.source_count",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "action_result.data.*.source_network",
                    "data_type": "string",
                    "column_name": "Source Network",
                    "column_order": 3,
                    "example_values": [
                        "Net-10-172-192.Net_10_0_0_0"
                    ]
                },
                {
                    "data_path": "action_result.data.*.start_time",
                    "data_type": "numeric",
                    "column_name": "Start Time",
                    "column_order": 8,
                    "example_values": [
                        1558009780686
                    ]
                },
                {
                    "data_path": "action_result.data.*.status",
                    "data_type": "string",
                    "column_name": "Status",
                    "column_order": 2,
                    "example_values": [
                        "OPEN"
                    ]
                },
                {
                    "data_path": "action_result.data.*.username_count",
                    "data_type": "numeric",
                    "example_values": [
                        0
                    ],
                    "contains": [
                        "user name"
                    ]
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "action_result.data.*.assigned_to",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Total offenses: 1"
                    ]
                },
                {
                    "data_path": "action_result.summary.total_offenses",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "versions": "EQ(*)"
        },
        {
            "action": "get events",
            "description": "Get events belonging to an offense",
            "type": "investigate",
            "identifier": "get_events",
            "read_only": true,
            "parameters": {
                "offense_id": {
                    "data_type": "numeric",
                    "order": 0,
                    "description": "Offense ID to get events of",
                    "verbose": "Only events belonging to this offense will be returned",
                    "contains": [
                        "qradar offense id"
                    ],
                    "primary": true
                },
                "ph": {
                    "data_type": "ph",
                    "order": 1
                },
                "start_time": {
                    "data_type": "numeric",
                    "order": 2,
                    "description": "Start of time range, in epoch time (milliseconds)",
                    "verbose": "If not specified, the default is past 10 days"
                },
                "end_time": {
                    "data_type": "numeric",
                    "order": 3,
                    "description": "End of time range, in epoch time (milliseconds)",
                    "verbose": "If not specified, the default is now"
                },
                "count": {
                    "data_type": "numeric",
                    "order": 4,
                    "description": "Number of events to retrieve",
                    "verbose": "If not specified, the default is 100",
                    "default": 100
                },
                "fields_filter": {
                    "data_type": "string",
                    "order": 5,
                    "description": "Filter on event field values",
                    "verbose": "Use this parameter to restrict the events returned that match the filter. For e.g. destinationip='10.10.0.52' and protocolid='6'"
                },
                "interval_days": {
                    "data_type": "numeric",
                    "order": 6,
                    "description": "Interval (days) used during 'Poll Now'",
                    "value": "5",
                    "required": false
                }
            },
            "render": {
                "type": "table",
                "width": 12,
                "height": 5,
                "title": "List Events"
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success"
                    ]
                },
                {
                    "data_path": "action_result.parameter.count",
                    "data_type": "numeric",
                    "example_values": [
                        10
                    ]
                },
                {
                    "data_path": "action_result.parameter.end_time",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.parameter.fields_filter",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.offense_id",
                    "data_type": "numeric",
                    "contains": [
                        "qradar offense id"
                    ],
                    "example_values": [
                        44
                    ]
                },
                {
                    "data_path": "action_result.parameter.start_time",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.AccountDomain",
                    "data_type": "string",
                    "contains": [
                        "domain",
                        "url"
                    ],
                    "example_values": []
                },
                {
                    "data_path": "action_result.data.*.Application",
                    "data_type": "string",
                    "example_values": []
                },
                {
                    "data_path": "action_result.data.*.Bytes",
                    "data_type": "numeric",
                    "example_values": []
                },
                {
                    "data_path": "action_result.data.*.BytesReceived",
                    "data_type": "numeric",
                    "example_values": []
                },
                {
                    "data_path": "action_result.data.*.BytesSent",
                    "data_type": "numeric",
                    "example_values": []
                },
                {
                    "data_path": "action_result.data.*.Destination Host Name",
                    "data_type": "string",
                    "column_name": "Dest Host Name",
                    "column_order": 4,
                    "contains": [
                        "host name"
                    ],
                    "example_values": []
                },
                {
                    "data_path": "action_result.data.*.EventID",
                    "data_type": "string",
                    "example_values": []
                },
                {
                    "data_path": "action_result.data.*.File Hash",
                    "data_type": "string",
                    "example_values": []
                },
                {
                    "data_path": "action_result.data.*.File ID",
                    "data_type": "string",
                    "example_values": []
                },
                {
                    "data_path": "action_result.data.*.File Path",
                    "data_type": "string",
                    "example_values": []
                },
                {
                    "data_path": "action_result.data.*.Filename",
                    "data_type": "string",
                    "example_values": []
                },
                {
                    "data_path": "action_result.data.*.Hostname",
                    "data_type": "string",
                    "contains": [
                        "host name"
                    ],
                    "column_name": "Host Name",
                    "column_order": 11
                },
                {
                    "data_path": "action_result.data.*.Installer Filename",
                    "data_type": "string",
                    "example_values": []
                },
                {
                    "data_path": "action_result.data.*.Message",
                    "data_type": "numeric",
                    "example_values": []
                },
                {
                    "data_path": "action_result.data.*.Source Host Name",
                    "data_type": "string",
                    "column_name": "Source host name",
                    "column_order": 1,
                    "contains": [
                        "host name"
                    ],
                    "example_values": []
                },
                {
                    "data_path": "action_result.data.*.categoryname_category",
                    "data_type": "string",
                    "column_name": "Category Name",
                    "column_order": 7,
                    "example_values": [
                        "Suspicious Activity"
                    ]
                },
                {
                    "data_path": "action_result.data.*.destinationaddress",
                    "data_type": "string",
                    "contains": [
                        "ip"
                    ],
                    "example_values": [
                        "127.0.0.1"
                    ]
                },
                {
                    "data_path": "action_result.data.*.destinationip",
                    "data_type": "string",
                    "column_name": "Destination IP",
                    "column_order": 3,
                    "contains": [
                        "ip"
                    ],
                    "example_values": [
                        "127.0.0.1"
                    ]
                },
                {
                    "data_path": "action_result.data.*.destinationmac",
                    "data_type": "string",
                    "example_values": [
                        "00:00:00:00:00:00"
                    ]
                },
                {
                    "data_path": "action_result.data.*.destinationport",
                    "data_type": "string",
                    "column_name": "Destination Port",
                    "column_order": 5,
                    "contains": [
                        "port"
                    ],
                    "example_values": [
                        "0"
                    ]
                },
                {
                    "data_path": "action_result.data.*.endtime",
                    "data_type": "string",
                    "column_name": "End Time",
                    "column_order": 10,
                    "example_values": [
                        "1559194870184"
                    ]
                },
                {
                    "data_path": "action_result.data.*.eventcount",
                    "data_type": "string",
                    "column_name": "Event Count",
                    "column_order": 8,
                    "example_values": [
                        "1"
                    ]
                },
                {
                    "data_path": "action_result.data.*.eventdirection",
                    "data_type": "string",
                    "example_values": [
                        "L2R"
                    ]
                },
                {
                    "data_path": "action_result.data.*.hostname_logsourceid",
                    "data_type": "string",
                    "column_name": "Log Source Host Name",
                    "column_order": 14,
                    "example_values": [
                        "Unknown Host 63"
                    ],
                    "contains": [
                        "host name"
                    ]
                },
                {
                    "data_path": "action_result.data.*.identityip",
                    "data_type": "string",
                    "contains": [
                        "ip"
                    ]
                },
                {
                    "data_path": "action_result.data.*.logsourcegroupname_logsourceid",
                    "data_type": "string",
                    "example_values": [
                        "Other"
                    ]
                },
                {
                    "data_path": "action_result.data.*.logsourceid",
                    "data_type": "string",
                    "example_values": [
                        "63"
                    ]
                },
                {
                    "data_path": "action_result.data.*.logsourcename_logsourceid",
                    "data_type": "string",
                    "example_values": [
                        "Custom Rule Engine-8 :: qradar"
                    ]
                },
                {
                    "data_path": "action_result.data.*.protocolname_protocolid",
                    "data_type": "string",
                    "example_values": [
                        "Reserved"
                    ]
                },
                {
                    "data_path": "action_result.data.*.qid",
                    "data_type": "string",
                    "example_values": [
                        "70750119"
                    ]
                },
                {
                    "data_path": "action_result.data.*.qidname_qid",
                    "data_type": "string",
                    "column_name": "Event Name",
                    "column_order": 6,
                    "example_values": [
                        "Communication with Known Watched Networks"
                    ]
                },
                {
                    "data_path": "action_result.data.*.relevance",
                    "data_type": "string",
                    "example_values": [
                        "8"
                    ]
                },
                {
                    "data_path": "action_result.data.*.severity",
                    "data_type": "string",
                    "example_values": [
                        "5"
                    ]
                },
                {
                    "data_path": "action_result.data.*.sourceaddress",
                    "data_type": "string",
                    "contains": [
                        "ip"
                    ],
                    "example_values": [
                        "10.1.16.50"
                    ]
                },
                {
                    "data_path": "action_result.data.*.sourceip",
                    "data_type": "string",
                    "column_name": "Source IP",
                    "column_order": 0,
                    "contains": [
                        "ip"
                    ],
                    "example_values": [
                        "10.1.16.50"
                    ]
                },
                {
                    "data_path": "action_result.data.*.sourcemac",
                    "data_type": "string",
                    "example_values": [
                        "00:00:00:00:00:00"
                    ]
                },
                {
                    "data_path": "action_result.data.*.sourceport",
                    "data_type": "string",
                    "column_name": "Source Port",
                    "column_order": 2,
                    "contains": [
                        "port"
                    ],
                    "example_values": [
                        "0"
                    ]
                },
                {
                    "data_path": "action_result.data.*.sourcev6",
                    "data_type": "string",
                    "contains": [
                        "ipv6"
                    ]
                },
                {
                    "data_path": "action_result.data.*.starttime",
                    "data_type": "string",
                    "column_name": "Start Time",
                    "column_order": 9,
                    "example_values": [
                        "1559194870184"
                    ]
                },
                {
                    "data_path": "action_result.data.*.username",
                    "data_type": "string",
                    "contains": [
                        "user name"
                    ],
                    "column_name": "User Name",
                    "column_order": 13,
                    "example_values": []
                },
                {
                    "data_path": "action_result.summary.total_events",
                    "data_type": "numeric",
                    "example_values": [
                        10
                    ]
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "action_result.data.*.Payload",
                    "data_type": "string",
                    "example_values": [
                        "Communication with Known Watched Networks\tThere has been event communication with networks that appear on the systems watch and darknet lists."
                    ]
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Total events: 10"
                    ]
                },
                {
                    "data_path": "action_result.parameter.interval_days",
                    "data_type": "numeric",
                    "example_values": [
                        20
                    ]
                }
            ],
            "versions": "EQ(*)"
        },
        {
            "action": "get flows",
            "description": "Get flows that make up an offense for a particular IP",
            "type": "investigate",
            "identifier": "get_flows",
            "read_only": true,
            "parameters": {
                "ip": {
                    "data_type": "string",
                    "order": 0,
                    "description": "IP to get all the flows of",
                    "primary": true,
                    "required": false,
                    "contains": [
                        "ip"
                    ]
                },
                "offense_id": {
                    "data_type": "numeric",
                    "order": 1,
                    "description": "Offense ID",
                    "verbose": "Only flows belonging to this offense will be returned",
                    "primary": true,
                    "contains": [
                        "qradar offense id"
                    ]
                },
                "start_time": {
                    "data_type": "numeric",
                    "order": 2,
                    "description": "Start of time range, in epoch time (milliseconds)",
                    "verbose": "If not specified, the default is past 10 days"
                },
                "end_time": {
                    "data_type": "numeric",
                    "order": 3,
                    "description": "End of time range, in epoch time (milliseconds)",
                    "verbose": "If not specified, the default is now"
                },
                "count": {
                    "data_type": "numeric",
                    "order": 4,
                    "description": "Number of flows to retrieve",
                    "verbose": "If not specified, the default is 100",
                    "default": 100
                },
                "fields_filter": {
                    "data_type": "string",
                    "order": 5,
                    "description": "Filter on flow field values",
                    "verbose": "Use this parameter to restrict the flows returned. For e.g. protocolid='6'"
                }
            },
            "render": {
                "type": "table",
                "width": 12,
                "height": 5,
                "title": "List Flows"
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.count",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.parameter.end_time",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.parameter.fields_filter",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.ip",
                    "data_type": "string",
                    "contains": [
                        "ip"
                    ]
                },
                {
                    "data_path": "action_result.parameter.offense_id",
                    "data_type": "numeric",
                    "contains": [
                        "qradar offense id"
                    ]
                },
                {
                    "data_path": "action_result.parameter.start_time",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.FTP Pass",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.FTP RETR File",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.FTP User",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.Google Search Terms",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.HTTP Content-Type",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.HTTP GET Request",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.HTTP Host",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.HTTP Referer",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.HTTP Response Code",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.HTTP Server",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.HTTP User-Agent",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.HTTP Version",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.SMTP From",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.SMTP HELO",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.SMTP To",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.applicationid",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.applicationname_applicationid",
                    "data_type": "string",
                    "column_name": "Application Name",
                    "column_order": 12
                },
                {
                    "data_path": "action_result.data.*.category",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.categoryname_category",
                    "data_type": "string",
                    "column_name": "Category Name",
                    "column_order": 13
                },
                {
                    "data_path": "action_result.data.*.credibility",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.destinationasn",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.destinationbytes",
                    "data_type": "string",
                    "column_name": "Bytes to dest",
                    "column_order": 6
                },
                {
                    "data_path": "action_result.data.*.destinationdscp",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.destinationflags",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.destinationifindex",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.destinationip",
                    "data_type": "string",
                    "contains": [
                        "ip"
                    ],
                    "column_name": "Destination IP",
                    "column_order": 3
                },
                {
                    "data_path": "action_result.data.*.destinationpackets",
                    "data_type": "string",
                    "column_name": "Packets to dest",
                    "column_order": 5
                },
                {
                    "data_path": "action_result.data.*.destinationpayload",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.destinationport",
                    "data_type": "string",
                    "contains": [
                        "port"
                    ],
                    "column_name": "Destination Port",
                    "column_order": 4
                },
                {
                    "data_path": "action_result.data.*.destinationprecedence",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.destinationv6",
                    "data_type": "string",
                    "column_name": "Destination V6",
                    "column_order": 14
                },
                {
                    "data_path": "action_result.data.*.firstpackettime",
                    "data_type": "string",
                    "column_name": "First Packet Time",
                    "column_order": 9
                },
                {
                    "data_path": "action_result.data.*.flowbias",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.flowdirection",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.flowinterface",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.flowinterfaceid",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.flowsource",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.flowtype",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.fullmatchlist",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.geographic",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.hasdestinationpayload",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.hasoffense",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.hassourcepayload",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.icmpcode",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.icmptype",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.intervalid",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.isduplicate",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.lastpackettime",
                    "data_type": "string",
                    "column_name": "Last Packet Time",
                    "column_order": 10
                },
                {
                    "data_path": "action_result.data.*.partialmatchlist",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.processorid",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.protocolid",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.protocolname_protocolid",
                    "data_type": "string",
                    "column_name": "Protocol",
                    "column_order": 2
                },
                {
                    "data_path": "action_result.data.*.qid",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.qidname_qid",
                    "data_type": "string",
                    "column_name": "QID Name",
                    "column_order": 16
                },
                {
                    "data_path": "action_result.data.*.relevance",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.retentionbucket",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.severity",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.sourceasn",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.sourcebytes",
                    "data_type": "string",
                    "column_name": "Bytes to src",
                    "column_order": 8
                },
                {
                    "data_path": "action_result.data.*.sourcedscp",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.sourceflags",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.sourceifindex",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.sourceip",
                    "data_type": "string",
                    "contains": [
                        "ip"
                    ],
                    "column_name": "Source IP",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.data.*.sourcepackets",
                    "data_type": "string",
                    "column_name": "Packets to src",
                    "column_order": 7
                },
                {
                    "data_path": "action_result.data.*.sourcepayload",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.sourceport",
                    "data_type": "string",
                    "column_name": "Source Port",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.data.*.sourceprecedence",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.sourcev6",
                    "data_type": "string",
                    "contains": [
                        "ipv6"
                    ]
                },
                {
                    "data_path": "action_result.data.*.starttime",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.viewobjectpair",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.total_flows",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                }
            ],
            "versions": "EQ(*)"
        },
        {
            "action": "offense details",
            "description": "Get details about an offense",
            "type": "investigate",
            "identifier": "offense_details",
            "read_only": true,
            "parameters": {
                "offense_id": {
                    "data_type": "numeric",
                    "order": 0,
                    "description": "Offense ID to get the details of",
                    "contains": [
                        "qradar offense id"
                    ],
                    "required": true,
                    "primary": true
                },
                "tenant_id": {
                    "data_type": "numeric",
                    "order": 1,
                    "description": "Tenant ID for saving container",
                    "required": false
                },
                "ingest_offense": {
                    "data_type": "boolean",
                    "order": 2,
                    "default": false,
                    "description": "Ingest offense into Phantom?",
                    "required": true
                },
                "interval_days": {
                    "data_type": "numeric",
                    "order": 3,
                    "description": "Interval (days) used during 'Poll Now'",
                    "value": "5",
                    "required": false
                }
            },
            "render": {
                "type": "table",
                "width": 12,
                "height": 5,
                "title": "Offenses Details"
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success"
                    ]
                },
                {
                    "data_path": "action_result.parameter.offense_id",
                    "data_type": "numeric",
                    "contains": [
                        "qradar offense id"
                    ],
                    "example_values": [
                        43
                    ]
                },
                {
                    "data_path": "action_result.data.*.categories",
                    "data_type": "string",
                    "example_values": [
                        "Error"
                    ]
                },
                {
                    "data_path": "action_result.data.*.category_count",
                    "data_type": "numeric",
                    "example_values": [
                        4
                    ]
                },
                {
                    "data_path": "action_result.data.*.close_time",
                    "data_type": "numeric",
                    "column_name": "Close Time",
                    "column_order": 9,
                    "example_values": []
                },
                {
                    "data_path": "action_result.data.*.closing_reason_id",
                    "data_type": "numeric",
                    "column_name": "Closing Reason Id",
                    "column_order": 11,
                    "example_values": []
                },
                {
                    "data_path": "action_result.data.*.closing_user",
                    "data_type": "string",
                    "column_name": "Closing User",
                    "column_order": 10,
                    "example_values": []
                },
                {
                    "data_path": "action_result.data.*.credibility",
                    "data_type": "numeric",
                    "example_values": [
                        4
                    ]
                },
                {
                    "data_path": "action_result.data.*.description",
                    "data_type": "string",
                    "column_name": "Description",
                    "column_order": 4,
                    "example_values": [
                        "Anomaly: Access to Honeypot or Tarpit Defined Address\n preceded by Communication with Known Watched Networks\n"
                    ]
                },
                {
                    "data_path": "action_result.data.*.destination_networks",
                    "data_type": "string",
                    "example_values": [
                        "other"
                    ]
                },
                {
                    "data_path": "action_result.data.*.device_count",
                    "data_type": "numeric",
                    "example_values": [
                        3
                    ]
                },
                {
                    "data_path": "action_result.data.*.event_count",
                    "data_type": "numeric",
                    "column_name": "Event Count",
                    "column_order": 6,
                    "example_values": [
                        1035
                    ]
                },
                {
                    "data_path": "action_result.data.*.flow_count",
                    "data_type": "numeric",
                    "column_name": "Flow Count",
                    "column_order": 7,
                    "example_values": [
                        0
                    ]
                },
                {
                    "data_path": "action_result.data.*.follow_up",
                    "data_type": "boolean",
                    "column_name": "Follow Up",
                    "column_order": 14,
                    "example_values": [
                        false,
                        true
                    ]
                },
                {
                    "data_path": "action_result.data.*.id",
                    "data_type": "numeric",
                    "contains": [
                        "qradar offense id"
                    ],
                    "column_name": "Offense Id",
                    "column_order": 0,
                    "example_values": [
                        43
                    ]
                },
                {
                    "data_path": "action_result.data.*.inactive",
                    "data_type": "boolean",
                    "column_name": "Inactive",
                    "column_order": 5,
                    "example_values": [
                        false,
                        true
                    ]
                },
                {
                    "data_path": "action_result.data.*.last_updated_time",
                    "data_type": "numeric",
                    "column_name": "Last Updated Time",
                    "column_order": 13,
                    "example_values": [
                        1559125383270
                    ]
                },
                {
                    "data_path": "action_result.data.*.local_destination_count",
                    "data_type": "numeric",
                    "example_values": [
                        0
                    ]
                },
                {
                    "data_path": "action_result.data.*.magnitude",
                    "data_type": "numeric",
                    "column_name": "Magnitude",
                    "column_order": 15,
                    "example_values": [
                        4
                    ]
                },
                {
                    "data_path": "action_result.data.*.offense_source",
                    "data_type": "string",
                    "column_name": "Offense Source",
                    "contains": [
                        "ip"
                    ],
                    "column_order": 1,
                    "example_values": [
                        "127.0.0.1"
                    ]
                },
                {
                    "data_path": "action_result.data.*.offense_type",
                    "data_type": "numeric",
                    "example_values": [
                        0
                    ]
                },
                {
                    "data_path": "action_result.data.*.policy_category_count",
                    "data_type": "numeric",
                    "example_values": [
                        0
                    ]
                },
                {
                    "data_path": "action_result.data.*.protected",
                    "data_type": "boolean",
                    "example_values": [
                        false,
                        true
                    ]
                },
                {
                    "data_path": "action_result.data.*.relevance",
                    "data_type": "numeric",
                    "example_values": [
                        2
                    ]
                },
                {
                    "data_path": "action_result.data.*.remote_destination_count",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "action_result.data.*.security_category_count",
                    "data_type": "numeric",
                    "example_values": [
                        4
                    ]
                },
                {
                    "data_path": "action_result.data.*.severity",
                    "data_type": "numeric",
                    "column_name": "Severity",
                    "column_order": 12,
                    "example_values": [
                        7
                    ]
                },
                {
                    "data_path": "action_result.data.*.source_count",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "action_result.data.*.source_network",
                    "data_type": "string",
                    "column_name": "Source Network",
                    "column_order": 3,
                    "example_values": [
                        "other"
                    ]
                },
                {
                    "data_path": "action_result.data.*.start_time",
                    "data_type": "numeric",
                    "column_name": "Start Time",
                    "column_order": 8,
                    "example_values": [
                        1558008289506
                    ]
                },
                {
                    "data_path": "action_result.data.*.status",
                    "data_type": "string",
                    "column_name": "Status",
                    "column_order": 2,
                    "example_values": [
                        "OPEN"
                    ]
                },
                {
                    "data_path": "action_result.data.*.username_count",
                    "data_type": "numeric",
                    "example_values": [
                        0
                    ],
                    "contains": [
                        "user name"
                    ]
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "action_result.data.*.assigned_to",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Total offenses: 1"
                    ]
                },
                {
                    "data_path": "action_result.parameter.tenant_id",
                    "data_type": "numeric",
                    "example_values": [
                        123
                    ]
                },
                {
                    "data_path": "action_result.parameter.ingest_offense",
                    "data_type": "boolean",
                    "example_values": [
                        true,
                        false
                    ]
                },
                {
                    "data_path": "action_result.summary.total_offenses",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "versions": "EQ(*)"
        },
        {
            "action": "alt manage ingestion",
            "description": "mange ingestion details",
            "type": "generic",
            "identifier": "alt_manage_ingestion",
            "read_only": false,
            "parameters": {
                "operation": {
                    "data_type": "string",
                    "order": 0,
                    "description": "operation to perform",
                    "value_list": [
                        "get last saved ingest time",
                        "delete last saved ingest time",
                        "set last saved ingest time"
                    ],
                    "required": true,
                    "primary": false,
                    "default": "get last saved ingest time"
                },
                "datetime": {
                    "data_type": "string",
                    "order": 1,
                    "default": false,
                    "description": "datetime string",
                    "required": false
                }
            },
            "render": {
                "type": "table",
                "width": 12,
                "height": 5,
                "title": "Manage Alt Ingestion"
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success"
                    ]
                },
                {
                    "data_path": "action_result.parameter.operation",
                    "data_type": "string",
                    "column_name": "operation",
                    "column_order": 0,
                    "example_values": [
                        "get last saved ingest time"
                    ]
                },
                {
                    "data_path": "action_result.parameter.datetime",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.last_saved_ingest_time",
                    "data_type": "string",
                    "column_name": "last saved ingest time",
                    "column_order": 1,
                    "example_values": [
                        "Fri May 24 00:00:00 2019 UTC +0000"
                    ]
                },
                {
                    "data_path": "action_result.data.*.last_saved_ingest_time_as_epoch_date",
                    "data_type": "numeric",
                    "column_name": "as epoch date",
                    "column_order": 2,
                    "example_values": [
                        1558656000000
                    ]
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Last saved ingest time: Fri May 24 00:00:00 2019 UTC +0000"
                    ]
                },
                {
                    "data_path": "action_result.summary.last_saved_ingest_time",
                    "data_type": "string",
                    "example_values": [
                        "Fri May 24 00:00:00 2019 UTC +0000"
                    ]
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "versions": "EQ(*)"
        },
        {
            "action": "run query",
            "description": "Execute an ariel query on the QRadar device",
            "verbose": "Use this action to execute queries using AQL on the QRadar device. AQL is a well documented (on the IBM website) query language with quite a few built-in functions.<br>Do note that this action could have a dynamic set of values returned in the data array, since the query can specify the columns to return. This is the main reason for not listing the data paths.",
            "type": "investigate",
            "identifier": "run_query",
            "read_only": true,
            "parameters": {
                "query": {
                    "data_type": "string",
                    "order": 0,
                    "description": "Ariel Query",
                    "contains": [
                        "qradar ariel query"
                    ],
                    "required": true,
                    "primary": true
                }
            },
            "render": {
                "type": "custom",
                "width": 10,
                "height": 5,
                "view": "qradar_view.display_query_results",
                "title": "Question Result"
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success"
                    ]
                },
                {
                    "data_path": "action_result.parameter.query",
                    "data_type": "string",
                    "contains": [
                        "qradar ariel query"
                    ],
                    "example_values": [
                        "select qid from events"
                    ]
                },
                {
                    "data_path": "action_result.data.*.events.*.category",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.events.*.destinationip",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.events.*.destinationport",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.events.*.eventcount",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.events.*.identityip",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.events.*.logsourceid",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.events.*.magnitude",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.events.*.protocolid",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.events.*.qid",
                    "data_type": "string",
                    "example_values": [
                        "38750003"
                    ]
                },
                {
                    "data_path": "action_result.data.*.events.*.sourceip",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.events.*.sourceport",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.events.*.starttime",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.events.*.username",
                    "data_type": "string",
                    "contains": [
                        "user name"
                    ]
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Successfully ran query"
                    ]
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "versions": "EQ(*)"
        },
        {
            "action": "add listitem",
            "description": "Add an item to a reference set in Qradar",
            "type": "investigate",
            "identifier": "add_to_reference_set",
            "read_only": true,
            "parameters": {
                "reference_set_name": {
                    "data_type": "string",
                    "order": 0,
                    "description": "Name of reference set to add to",
                    "required": true,
                    "primary": false
                },
                "reference_set_value": {
                    "data_type": "string",
                    "order": 1,
                    "description": "Value to add to the reference set",
                    "verbose": "Value to add",
                    "required": true
                }
            },
            "render": {
                "type": "table",
                "width": 12,
                "height": 5,
                "title": "Offenses Details"
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success"
                    ]
                },
                {
                    "data_path": "action_result.data.*.timeout_type",
                    "data_type": "string",
                    "example_values": [
                        "FIRST_SEEN"
                    ],
                    "column_order": 0,
                    "column_name": "Timeout Type"
                },
                {
                    "data_path": "action_result.data.*.element_type",
                    "data_type": "string",
                    "example_values": [
                        "IP"
                    ],
                    "column_order": 1,
                    "column_name": "Element Type"
                },
                {
                    "data_path": "action_result.data.*.creation_time",
                    "data_type": "numeric",
                    "example_values": [
                        1558518483009
                    ],
                    "column_order": 2,
                    "column_name": "Creation Time"
                },
                {
                    "data_path": "action_result.data.*.name",
                    "data_type": "string",
                    "example_values": [
                        "Demo"
                    ],
                    "column_order": 3,
                    "column_name": "Name"
                },
                {
                    "data_path": "action_result.data.*.number_of_elements",
                    "data_type": "numeric",
                    "example_values": [
                        3
                    ]
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Element type: IP, Name: Demo, Number of elements: 3"
                    ]
                },
                {
                    "data_path": "action_result.parameter.reference_set_name",
                    "data_type": "string",
                    "example_values": [
                        "Demo"
                    ]
                },
                {
                    "data_path": "action_result.parameter.reference_set_value",
                    "data_type": "string",
                    "example_values": [
                        "127.0.0.2",
                        "127.0.0.1"
                    ],
                    "contains": [
                        "ip"
                    ]
                },
                {
                    "data_path": "action_result.summary.element_type",
                    "data_type": "string",
                    "example_values": [
                        "IP"
                    ]
                },
                {
                    "data_path": "action_result.summary.name",
                    "data_type": "string",
                    "example_values": [
                        "Demo"
                    ]
                },
                {
                    "data_path": "action_result.summary.number_of_elements",
                    "data_type": "numeric",
                    "example_values": [
                        3
                    ]
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "versions": "EQ(*)"
        },
        {
            "action": "close offense",
            "description": "Close an active offense, marking status=CLOSED",
            "type": "investigate",
            "identifier": "close_offense",
            "read_only": true,
            "parameters": {
                "offense_id": {
                    "data_type": "numeric",
                    "order": 0,
                    "description": "Offense ID to close",
                    "contains": [
                        "qradar offense id"
                    ],
                    "required": true,
                    "primary": true
                },
                "closing_reason_id": {
                    "data_type": "numeric",
                    "order": 1,
                    "description": "Reason for closing offense",
                    "verbose": "1 = Non Issue, 2 = False-Positive, Tuned, 3 = Policy Violation, 205 = Malware, 204 = Ransomware, 154 = Resolved, 54 = Subsequent Tuning Required",
                    "value_list": [
                        "1",
                        "2",
                        "3",
                        "205",
                        "204",
                        "154",
                        "54"
                    ],
                    "required": true
                }
            },
            "render": {
                "type": "table",
                "width": 12,
                "height": 5,
                "title": "Offenses Details"
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.closing_reason_id",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.parameter.offense_id",
                    "data_type": "numeric",
                    "contains": [
                        "qradar offense id"
                    ]
                },
                {
                    "data_path": "action_result.data.*.categories",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.category_count",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.close_time",
                    "data_type": "numeric",
                    "column_name": "Close Time",
                    "column_order": 9
                },
                {
                    "data_path": "action_result.data.*.closing_reason_id",
                    "data_type": "numeric",
                    "column_name": "Closing Reason Id",
                    "column_order": 11
                },
                {
                    "data_path": "action_result.data.*.closing_user",
                    "data_type": "string",
                    "column_name": "Closing User",
                    "column_order": 10
                },
                {
                    "data_path": "action_result.data.*.credibility",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.description",
                    "data_type": "string",
                    "column_name": "Description",
                    "column_order": 4
                },
                {
                    "data_path": "action_result.data.*.destination_networks",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.device_count",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.event_count",
                    "data_type": "numeric",
                    "column_name": "Event Count",
                    "column_order": 6
                },
                {
                    "data_path": "action_result.data.*.flow_count",
                    "data_type": "numeric",
                    "column_name": "Flow Count",
                    "column_order": 7
                },
                {
                    "data_path": "action_result.data.*.follow_up",
                    "data_type": "boolean",
                    "column_name": "Follow Up",
                    "column_order": 14
                },
                {
                    "data_path": "action_result.data.*.id",
                    "data_type": "numeric",
                    "contains": [
                        "qradar offense id"
                    ],
                    "column_name": "Offense Id",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.data.*.inactive",
                    "data_type": "boolean",
                    "column_name": "Inactive",
                    "column_order": 5
                },
                {
                    "data_path": "action_result.data.*.last_updated_time",
                    "data_type": "numeric",
                    "column_name": "Last Updated Time",
                    "column_order": 13
                },
                {
                    "data_path": "action_result.data.*.local_destination_count",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.magnitude",
                    "data_type": "numeric",
                    "column_name": "Magnitude",
                    "column_order": 15
                },
                {
                    "data_path": "action_result.data.*.offense_source",
                    "data_type": "string",
                    "column_name": "Offense Source",
                    "contains": [
                        "ip"
                    ],
                    "column_order": 1
                },
                {
                    "data_path": "action_result.data.*.offense_type",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.policy_category_count",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.protected",
                    "data_type": "boolean"
                },
                {
                    "data_path": "action_result.data.*.relevance",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.remote_destination_count",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.security_category_count",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.severity",
                    "data_type": "numeric",
                    "column_name": "Severity",
                    "column_order": 12
                },
                {
                    "data_path": "action_result.data.*.source_count",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.source_network",
                    "data_type": "string",
                    "column_name": "Source Network",
                    "column_order": 3
                },
                {
                    "data_path": "action_result.data.*.start_time",
                    "data_type": "numeric",
                    "column_name": "Start Time",
                    "column_order": 8
                },
                {
                    "data_path": "action_result.data.*.status",
                    "data_type": "string",
                    "column_name": "Status",
                    "column_order": 2
                },
                {
                    "data_path": "action_result.data.*.username_count",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                }
            ],
            "versions": "EQ(*)"
        },
        {
            "action": "update offense",
            "description": "Attach a note to an offense",
            "type": "generic",
            "identifier": "add_note",
            "read_only": false,
            "parameters": {
                "offense_id": {
                    "data_type": "numeric",
                    "order": 0,
                    "description": "Offense ID to attach note to",
                    "contains": [
                        "qradar offense id"
                    ],
                    "required": true,
                    "primary": true
                },
                "note_text": {
                    "data_type": "string",
                    "order": 1,
                    "description": "Text to put into note",
                    "required": true
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success"
                    ]
                },
                {
                    "data_path": "action_result.parameter.note_text",
                    "data_type": "string",
                    "example_values": [
                        "Note Added By Phantom"
                    ]
                },
                {
                    "data_path": "action_result.parameter.offense_id",
                    "data_type": "string",
                    "example_values": [
                        "19"
                    ],
                    "contains": [
                        "qradar offense id"
                    ]
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Successfully added note to offense"
                    ],
                    "column_order": 0,
                    "column_name": "Message"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "versions": "EQ(*)",
            "render": {
                "width": 12,
                "title": "Add Note",
                "type": "table",
                "height": 5
            }
        },
        {
            "action": "assign user",
            "description": "Assign user to an offense",
            "type": "generic",
            "identifier": "assign_user",
            "read_only": false,
            "parameters": {
                "offense_id": {
                    "data_type": "numeric",
                    "order": 0,
                    "description": "Offense ID to assign user to",
                    "contains": [
                        "qradar offense id"
                    ],
                    "required": true,
                    "primary": true
                },
                "assignee": {
                    "data_type": "string",
                    "order": 1,
                    "description": "Name of the user",
                    "required": true
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success"
                    ],
                    "column_order": 0,
                    "column_name": "Status"
                },
                {
                    "data_path": "action_result.parameter.assignee",
                    "data_type": "string",
                    "example_values": [
                        "test_name"
                    ],
                    "column_order": 1,
                    "column_name": "Assignee"
                },
                {
                    "data_path": "action_result.parameter.offense_id",
                    "data_type": "string",
                    "example_values": [
                        "19"
                    ],
                    "contains": [
                        "qradar offense id"
                    ],
                    "column_order": 2,
                    "column_name": "Offense ID"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Successfully assigned user to offense"
                    ]
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "versions": "EQ(*)",
            "render": {
                "width": 12,
                "title": "Assign User",
                "type": "table",
                "height": 5
            }
        },
        {
            "action": "on poll",
            "description": "Callback action for the on_poll ingest functionality",
            "type": "ingest",
            "identifier": "on_poll",
            "read_only": true,
            "parameters": {
                "container_id": {
                    "data_type": "string",
                    "order": 0,
                    "description": "Container IDs to limit the ingestion to",
                    "allow_list": true
                },
                "start_time": {
                    "data_type": "numeric",
                    "order": 1,
                    "description": "Start of time range, in epoch time (milliseconds)",
                    "verbose": "If not specified, the default is past 10 days"
                },
                "end_time": {
                    "data_type": "numeric",
                    "order": 2,
                    "description": "End of time range, in epoch time (milliseconds)",
                    "verbose": "If not specified, the default is now"
                },
                "container_count": {
                    "data_type": "numeric",
                    "order": 3,
                    "description": "Maximum number of container records to query for"
                },
                "artifact_count": {
                    "data_type": "numeric",
                    "order": 4,
                    "description": "Maximum number of artifact records to query for"
                }
            },
            "output": [],
            "versions": "EQ(*)"
        }
    ]
}